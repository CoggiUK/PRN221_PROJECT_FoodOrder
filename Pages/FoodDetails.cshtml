@page
@model PRN221_PROJECT_FoodOrder.Pages.FoodDetailsModel
@{
    Product p = Model.Product as Product;
    Customer c = Model.currentCustomer as Customer;
}
<section class="hero-section about gap" style="background-image: url(https://bslthemes.com/html/quickeat/assets/img/background-1.png);">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-6" data-aos="fade-up" data-aos-delay="300" data-aos-duration="400">
                <div class="about-text">
                    <ul class="crumbs d-flex">
                        <li><a href="/Index">Home</a></li>
                        <li><a href="/foodmenu"><i class="fa-solid fa-right-long"></i>Food Menu</a></li>
                        <li class="two">
                            <a href="#">
                                <i class="fa-solid fa-right-long"></i>Food Details
                            </a>
                        </li>
                    </ul>
                    <div class="logo-detail">
                        <img alt="logo" src="@(p.ProductImage == null ? "/img/default_dish_img.jpg" : ($"{p.ProductImage}"))">
                        <h2>@p.ProductName</h2>
                    </div>
                    <div class="rate">
                        <span>RATE: &#9; @(p.Rates.Count) <i class="fa-solid fa-star"> @(p.Rating == null ? "Be the first" : p.Rating)</i></span>
                        <div class="star" style="display: inline-block">
                            <i class="fa-solid fa-star empty" data-value="1"></i>
                            <i class="fa-solid fa-star empty" data-value="2"></i>
                            <i class="fa-solid fa-star empty" data-value="3"></i>
                            <i class="fa-solid fa-star empty" data-value="4"></i>
                            <i class="fa-solid fa-star empty" data-value="5"></i>
                        </div>
                        <span>CUISINES:</span>
                        <div class="cafa-button">
                            <a href="#">@p.ProductType</a>
                        </div>
                        <span>FEATURES:</span>
                        <p class="mb-4">
                            @p.Description
                        </p>
                        <div>
                        </div>
                        <div class="price" style="width: 75%; padding: 0px">
                            <h2 style="width: auto; padding-top: 0px;">$@p.UnitPrice</h2>
                            <div class="qty-input" style="padding-bottom: 20px">
                                <button class="qty-count qty-count--minus" data-action="minus"
                                        type="button">
                                    -
                                </button>
                                <input class="product-qty" type="number" name="product-qty"
                                       min="0" value="1">
                                <button class="qty-count qty-count--add" data-action="add"
                                        type="button">
                                    +
                                </button>
                            </div>
                        </div>
                        <button class="button-price w-75" onclick="addToBasket(@p.ProductId, @(c != null? c.CustomerId: 0), getQuantity(this))">
                            Add to Basket<i class="fa-solid fa-bag-shopping"></i>
                        </button>
                    </div>

                </div>
            </div>
            <div class="col-lg-6" data-aos="fade-up" data-aos-delay="400" data-aos-duration="500">
                <div class="about-img">
                    <img alt="man" src="@(p.ProductImage == null ? "/img/default_dish_img.jpg" : $"{p.ProductImage}")" style="object-fit: contain">
                </div>
            </div>
        </div>
    </div>
</section>
<section class="blog-content gap no-top " data-aos="fade-up" data-aos-delay="300" data-aos-duration="400">
    <div class="container">
        <div class="row">
            <div class="offset-xl-2 col-xl-8 col-lg-12">
                <div class="comment">
                    <h2><span>@p.Comments.Count</span> Comments</h2>
                </div>
                @if (p.Comments.Count == 0)
                {
                    <div class="col-12 gap" data-aos="flip-up" data-aos-delay="200"
                         data-aos-duration="300">
                        <div class="no-data">
                            Seems like a bit lonely...
                        </div>
                    </div>
                }
                else
                {
                    <ul class="comment gap no-top">

                        @foreach (var message in p.Comments)
                        {
                            <li>
                                <div class="comment-text">
                                    <p>@message.CommentContent</p>
                                </div>
                                <div class="author-name-comment">
                                    <div>
                                        <h6>@message.Customer?.CustomerName</h6>
                                        <span>@message.CreatedAt?.ToString("dd.MMM. yyyy")</span>
                                    </div>
                                    <img alt="mann" src="@(message.Customer?.User?.Avatar == null? "https://images.unsplash.com/photo-1689613188308-ef2815f15810?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80" : message.Customer?.User?.Avatar)">
                                </div>
                            </li>
                        }

                        @*<li class="show-all-button">
                    <h6>4 more answers <a href="#"><span>Show All<i class="fa-solid fa-angle-down"></i></span></a></h6>
                    </li>
                    <li>
                    <div class="button-gap">
                    <a href="#" class="button button-2 non">See all comments<i class="fa-solid fa-angle-down"></i></a>
                    </div>
                    </li>*@
                    </ul>
                }

                <div class="comment">
                    <h2>Leave your comment</h2>
                    <form class="comment-blog" method="post" asp-page-handler="Comment">
                        <textarea name="Comment.CommentContent" placeholder="Enter you comment" required></textarea>
                        <div class="row">
                            <div class="col-lg-6">
                                <input type="hidden" name="Comment.CustomerId" value="@(c==null? 0 : c.CustomerId)">
                                <input type="hidden" name="Comment.ProductId" value="@p.ProductId" />
                            </div>
                        </div>
                        <button class="button-price" type="submit">Publish a comment</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    // Get the elements for the star rating
    const starContainer = $('.star');
    const stars = starContainer.find('i');

    // Function to update the star rating display
    function updateStarRating(rating) {
        const starIndex = Math.floor(rating);
        const hasHalfStar = rating % 1 !== 0;

        stars.each(function (index) {
            $(this).removeClass('fa-solid');
            $(this).removeClass('fa-star');
            $(this).removeClass('empty');
            $(this).removeClass('fa-regular');
            $(this).removeClass('fa-star-half-stroke');
            if (index < starIndex) {
                $(this).addClass('fa-solid');
                $(this).addClass('fa-star');
            } else if (hasHalfStar && index === starIndex) {
                $(this).addClass('fa-regular');
                $(this).addClass('fa-star-half-stroke');
            } else {
                $(this).addClass('fa-solid');
                $(this).addClass('fa-star');
                $(this).addClass('empty');
            }
        });
    }

    // Function to handle the hover event
    function handleHover(event) {
        const hoveredStar = $(event.target);
        let rating = parseFloat(hoveredStar.data('value'));
        if (isNaN(rating)) rating = initialRating;
        updateStarRating(rating);
    }

    // Function to handle the click event
    function handleClick(event) {
        const clickedStar = $(event.target);
        const rating = parseFloat(clickedStar.data('value'));
        initialRating = rating;
        // Make your Ajax POST request here with the 'rating' value

    @(c == null ? "window.location.href = `/login`;return;" : null)

            $.ajax({
                type: "POST",
                url: "/FoodDetails?handler=Rating",
                data: JSON.stringify({
                    CustomerId: @(c == null ? 0 : c.CustomerId),
                    ProductId: @p.ProductId,
                    RateStar: rating,
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val(),
                },
                success: function (data) {
                    toastr.success("Rated!", "", { positionClass: "toast-bottom-right" });
                },
                error: function (error) {
                    console.error("Error:", error);
                    toastr.error("Connection error", "", { positionClass: "toast-bottom-right" });
                },
            });
    }

    // Bind the hover and click events to the stars
    starContainer.on('mouseenter', 'i', handleHover);
    starContainer.on('mouseleave', handleHover);
    starContainer.on('click', 'i', handleClick);

    // Initial star rating display (assuming 'initialRating' is the initial rating value from the server)
    let initialRating = @(p.Rating == null ? 0 : p.Rating) ; // Replace this with the actual value from the server
    updateStarRating(initialRating);
</script>